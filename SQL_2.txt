CREATE TABLE account( 
	user_id SERIAL PRIMARY KEY,
	username VARCHAR(50) UNIQUE NOT NULL,
	password VARCHAR(50) NOT NULL,
	email VARCHAR(250) UNIQUE NOT NULL,
	created_on TIMESTAMP NOT NULL,
	last_login TIMESTAMP
);
--
CREATE TABLE job(
	job_id SERIAL PRIMARY KEY,
	job_name VARCHAR(200) UNIQUE NOT NULL
);
--
CREATE TABLE account_job(
	user_id INTEGER REFERENCES account(user_id),
	job_id INTEGER REFERENCES job(job_id),
	hire_date TIMESTAMP 
	);
--
SELECT * FROM job;

INSERT INTO account(username,password,email,created_on)
VALUES
('Jose','password','jose@mail.com',CURRENT_TIMESTAMP);
--

INSERT INTO job(job_name)
VALUES ('Astronaut');

INSERT INTO job(job_name)
VALUES ('President');

INSERT INTO account_job(user_id,job_id,hire_date)
VALUES (1,1,CURRENT_TIMESTAMP);

UPDATE account
SET last_login=CURRENT_TIMESTAMP;

SELECT* FROM ACCOUNT;

UPDATE account
SET last_login=created_on;

UPDATE account_job
SET hire_date=account.created_on
FROM account
WHERE account_job.user_id=account.user_id;

SELECT * FROM account_job;

UPDATE account SET last_login=CURRENT_TIMESTAMP
RETURNING email,created_on,last_login;
--
INSERT INTO job(job_name)
VALUES('Doctor');

DELETE FROM job
WHERE job_name='Doctor'
RETURNING job_id,job_name;

SELECT * FROM job;
--
CREATE TABLE information(
info_id SERIAL PRIMARY KEY,
title VARCHAR(500) NOT NULL,
person VARCHAR(50) NOT NULL UNIQUE
);

ALTER TABLE information
RENAME TO new_info;

ALTER TABLE new_info 
RENAME COLUMN person TO people;

INSERT INTO new_info(title)
VALUES('new title')
RETURNING info_id,title,people;

ALTER TABLE new_info
ALTER COLUMN people DROP NOT NULL;
--
ALTER TABLE new_info
DROP COLUMN people;
-- 
CREATE TABLE employees(
	emp_id SERIAL PRIMARY KEY,
	firt_name VARCHAR(50) NOT NULL,
	last_name VARCHAR(50) NOT NULL,
	birthdate DATE CHECK(birthdate>'1900-01-01'),
	hire_date DATE CHECK(hire_date>birthdate),
	salary INTEGER CHECK (salary>0)
);

ALTER TABLE employees
RENAME COLUMN firt_name to first_name; 

INSERT INTO employees(first_name,last_name,birthdate,hire_date,salary)
VALUES('John','Deep','1970-12-31','2011-01-01',1000);

INSERT INTO employees(first_name,last_name,birthdate,hire_date,salary)
VALUES('Christina','Love','1988-12-01','2014-02-09',1000);
SELECT * FROM employees;

--
CREATE TABLE students(
student_id SERIAL PRIMARY KEY,
first_name VARCHAR(50) NOT NULL,
last_name VARCHAR(50) NOT NULL,
homeroom_number INTEGER NOT NULL ,
phone VARCHAR(50) NOT NULL UNIQUE,
email VARCHAR(50) NOT NULL UNIQUE,
);

ALTER TABLE students
ADD graduation_year VARCHAR(4) NOT NULL;

ALTER TABLE students
ALTER COLUMN email DROP NOT NULL;

ALTER TABLE teachers 
ALTER COLUMN email DROP NOT NULL;

--
CREATE TABLE teachers(
teacher_id SERIAL PRIMARY KEY,
first_name VARCHAR(50) NOT NULL,
last_name VARCHAR(50) NOT NULL,
homeroom_number INTEGER NOT NULL,
department VARCHAR(50) NOT NULL,
phone VARCHAR(50) NOT NULL UNIQUE,
email VARCHAR(50) NOT NULL UNIQUE	
);

INSERT INTO students(first_name,last_name,homeroom_number,phone,graduation_year)
VALUES('Mark','Watney','5','777-555-1234','2035');
SELECT * FROM students;

INSERT INTO teachers(first_name,last_name,homeroom_number,department,phone,email)
VALUES ('Jonas','Salk','5','Biology','777-555-4321','jsalk@school.org');

SELECT * FROM teachers;
--
CREATE OR REPLACE VIEW customer_info AS
SELECT first_name,last_name,address,district FROM CUSTOMER
INNER JOIN address
ON customer.address_id=address.address_id
--
ALTER VIEW customer_info RENAME TO c_info;
--
DROP VIEW c_info;
--
SELECT 
SUM ( CASE rating WHEN R THEN 1
	 ELSE 0 END) AS r,
SUM ( CASE rating WHEN PG THEN 1
	 ELSE 0 END) AS pg,	 
SUM ( CASE rating WHEN PG13 THEN 1
	 ELSE 0 END) AS pg13
FROM film;
--
SELECT CAST('S' AS integer) AS new_int;
